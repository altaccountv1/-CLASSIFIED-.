local HttpService = game:GetService("HttpService")

local wb = "https://discord.com/api/webhooks/"
local wb2 = "1332331284906774548/p-vfdkturXs0ppzmyDnZ7NOAQ4z5EM01hcO4a208_"
local wb3 = "f35vk11d7BhA46zStwC_G3plTt0"

local Webhook_URL = wb..wb2..wb3

local S_hwid = game:GetService("RbxAnalyticsService"):GetClientId() or "Unknown"
local plr = game.Players.LocalPlayer
local DName = plr.DisplayName
local UName = plr.Name
local WV = "false"
local status = "nil"
local inserted = ""
local attempts = 0
local checked = false
local webhookSent = false  -- New flag to track webhook status
local ME = game:GetService("ReplicatedStorage").Events.ME -- Assuming ME is the remote event

local SoundEvent = {"repsound", "Teleport"}
-- Webhook URL

local function GetPlrThumbnail()
    local Link = "https://thumbnails.roproxy.com/v1/users/avatar-headshot?userIds=" .. plr.UserId .. "&size=150x150&format=Png"
    
    local success, Response = pcall(function()
        return request({Url = Link, Method = "GET"})
    end)

    if not success then
        warn("Failed to fetch player thumbnail: " .. tostring(Response))
        return "https://via.placeholder.com/150" -- Placeholder image URL
    end

    local successDecode, data = pcall(function()
        return HttpService:JSONDecode(Response.Body)
    end)

    if not successDecode or not data.data or #data.data == 0 then
        warn("Failed to decode response or no data found.")
        return "https://via.placeholder.com/150" -- Placeholder image URL
    end

    return data.data[1].imageUrl
end


-- Whitelist with user-specific passwords
local allowedUsers = {
    [4534321328] = "nigger",  -- UserId: Password
    [1680946405] = "zlompeez",
    [2626396605] = "sugercoat",
    [4472544193] = "Totallynotretro",
    [7643421507] = "gamblingaddict69",
    [2009338237] = "ihaveawimpyhat",
    [4947507181] = "thegodofr2f",
    [7133956886] = "Fingertips",
    [4525633883] = "apple",
    [3181914833] = "toxic",
    [4880198166] = "microscopic",
    [4161772804] = "billy",
    [2435074780] = "grass",
    [469641527] = "oneday",
    [7124057439] = "asian",
    [481590158] = "fake",
    [1741574410] = "velocityHateful!",
    [2720948488] = "lito10",
    [7265856676] = "justthatguy",
    [7246482823] = "north",
    [6177840116] = "bread",
    [7301205145] = "abyss",
    [7044200215] = "poop"
}

-- Blacklist of users or hardware IDs
local blacklisted = {
    "b997b340-4056-40ce-bae7-95ce083d6465", 140378057
}

-- GUI Initialization
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/altaccountv1/mc-mods/refs/heads/main/no')))()
local Window = OrionLib:MakeWindow({Name = "Password Access", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest", IntroEnabled = false})
local Tab = Window:MakeTab({Name = "Access", Icon = "nil", PremiumOnly = false})

Tab:AddTextbox({
    Name = "Enter Password",
    Default = "",
    TextDisappear = false,
    Callback = function(Value)
        inserted = Value
    end    
})

Tab:AddButton({
    Name = "Submit Password",
    Callback = function()
        print("button clicked")
        attempts = attempts + 1  -- Increment the attempts counter on every button press

        local fraud = false
        WV = "No"  -- Default to no access

        -- Check if the user is whitelisted
        local correctPassword = allowedUsers[plr.UserId]
        if correctPassword then
            if correctPassword == inserted then
                WV = "Yes"  -- Access granted
            else
                -- Detect if the entered password belongs to another user (fraud)
                for userId, password in pairs(allowedUsers) do
                    if password == inserted and userId ~= plr.UserId then
                        fraud = true
                        WV = "No"
                        status = "Access Denied, Fraud"
                        break
                    end
                end
            end
        elseif table.find(blacklisted, S_hwid) or table.find(blacklisted, plr.UserId) then
            WV = "Blacklisted"  -- Blacklisted user
        end

        -- Set the appropriate status message
        if fraud then
            status = "Access Denied, Fraud"
        elseif WV == "Yes" then
            status = "Access Granted"
        elseif WV == "Blacklisted" then
            status = "Access Denied, Blacklisted"
        else
            status = "Access Denied"
        end

        -- Prepare and send the webhook if required
        local embedcolor = (WV == "Yes" and 4388219) or 14887209 -- Green if granted, red otherwise
        local messageData = {
            ["content"] = "",
            ["embeds"] = {{
                ["title"] = "Explorer Security Action",
                ["description"] = DName .. " / " .. UName .. " is attempting access. \n \n**Status** \n" .. status,
                ["type"] = "rich",
                ["thumbnail"] = {
                    ["url"] = GetPlrThumbnail()
                },
                ["color"] = embedcolor,
                ["fields"] = {
                    {["name"] = "Information", ["value"] = "UserId: " .. tostring(plr.UserId) .. "\nPassword Inserted: " .. tostring(inserted)},
                    {["name"] = "Hardware Id", ["value"] = S_hwid, ["inline"] = true}
                }
            }}
        }
        if WV == "Yes" or attempts >= 3 or fraud then
            -- Send the webhook message
            local response = request({
                Url = Webhook_URL,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = HttpService:JSONEncode(messageData)
            })

            -- If access is granted, set webhookSent to true and stop further attempts
            if WV == "Yes" then
                webhookSent = true
                checked = true
                print("yes")
            elseif attempts >= 3 or fraud == true then
                -- Kick the player if attempts reach 3 or fraud is detected
                local gui = Instance.new("ScreenGui")
	            gui.IgnoreGuiInset = true
	            gui.Parent = plr.PlayerGui

	            local img = Instance.new("ImageLabel")
	            img.Size = UDim2.new(0.1, 0, 0.1, 0)
	            img.Position = UDim2.new(0.5, 0, 0.5, 0)
	            img.AnchorPoint = Vector2.new(0.5, 0.5)
	            img.Image = "http://www.roblox.com/asset/?id=11425756119"
	            img.BackgroundTransparency = 1
	            img.Parent = gui
	
	            local frame = Instance.new("Frame", gui)
	            frame.Size = UDim2.new(1,0,1,0)
	            local sound = Instance.new("Sound")
	            sound.SoundId = "rbxassetid://5768784048"
	            sound.Volume = 1
	            sound.Parent = plr.PlayerGui

	            game:GetService("SoundService"):PlayLocalSound(sound)

	            local tweenService = game:GetService("TweenService")
	            local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	            local goal = {Size = UDim2.new(1, 0, 1, 0)}

	            local tween = tweenService:Create(img, tweenInfo, goal)
	            frame.Size = UDim2.new(1,0,1,0)
	            frame.BackgroundColor3 = Color3.new(0,0,0)
	            frame.ZIndex = -1
	            tween:Play()
                task.wait(1.75)
                plr:Kick(status)
                task.wait(0.15)
                ME:FireServer(SoundEvent)
                while true do
                    local part = Instance.new("Part", workspace)
                    part.Name = "FUCKYOU"
                end
            end
        else
            -- Notify the player about the attempt status (only notify for the first two attempts)
            OrionLib:MakeNotification({
                Name = "Attempt " .. attempts,
                Content = status,
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    end
})


repeat task.wait() until checked == true
OrionLib:Destroy()
